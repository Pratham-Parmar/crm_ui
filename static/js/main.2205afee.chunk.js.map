{"version":3,"sources":["config.js","initForm.js","about.js","done.js","fillPreference.js","index.js"],"names":["api_url","InitForm","props","state","isLoading","isError","alertState","alertMsg","handleChange","bind","handleSubmit","showAlert","hideAlert","event","name","target","val","value","this","setState","member_emails","trim","split","member_names","deadline","Date","parse","grp_size","parseInt","msg","preventDefault","i","validator","isEmail","length","now","payload","Array","push","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","data","history","catch","err","console","info","style","justifyContent","display","CircularProgress","margin","Alert","severity","Grid","container","alignItems","justify","minHeight","id","Dialog","open","DialogContent","DialogContentText","DialogActions","Button","onClick","color","Paper","elevation","borderRadius","padding","paddingTop","flexDirection","href","onSubmit","spacing","direction","TextField","type","label","required","onChange","InputProps","inputProps","min","InputLabelProps","shrink","marginLeft","multiline","rows","rowsMax","variant","helperText","marginRight","React","Component","About","Done","textAlign","FillPreference","handleTag","delete","getNames","project_title","organizer_name","all","chosen","chosenPref","errorMsg","match","params","secret","filter","item","map","e","newChosen","splice","newChosenPref","includes","items","onPref","pref","toString","Box","Typography","Autocomplete","onInputChange","options","getOptionLabel","option","width","onTagsChange","renderInput","maxHeight","overflow","List","alignSelf","Item","ListItem","align","minWidth","marginBottom","max","IconButton","fontSize","my_theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","path","component","exact","render","to","pathname","ReactDOM","StrictMode","theme","AppBar","position","Toolbar","Link","textDecoration","justifySelf","window","document","getElementById"],"mappings":"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","file":"static/js/main.2205afee.chunk.js","sourcesContent":["let api_url = null\nif (process.env.NODE_ENV === 'development') {\n    api_url = \"http://127.0.0.1:5000\"\n} else {\n    api_url = \"https://silverbugci.centralindia.cloudapp.azure.com\"\n}\nexport {api_url}","import React from \"react\";\nimport validator from \"validator\";\nimport {Alert} from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n    Paper,\n    Button,\n    Box,\n    Grid,\n    TextField, Dialog, DialogTitle, DialogContent, DialogActions, DialogContentText,\n} from \"@material-ui/core\";\nimport {api_url} from \"./config\";\n\n\nclass InitForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            isError: false,\n            alertState: false,\n            alertMsg: \"Please check the form for errors\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.showAlert = this.showAlert.bind(this);\n        this.hideAlert = this.hideAlert.bind(this);\n    }\n\n    handleChange(event) {\n        let name = event.target.name;\n        let val = event.target.value;\n        if (name === \"member_emails\") {\n            this.setState({member_emails: val.trim().split(/\\r?\\n/)});\n        } else if (name === \"member_names\") {\n            this.setState({member_names: val.trim().split(/\\r?\\n/)});\n        } else if (name === \"deadline\") {\n            this.setState({deadline: Date.parse(val) / 1000});\n        } else if (name === \"grp_size\") {\n            this.setState({grp_size: parseInt(val)});\n        } else {\n            this.setState({[name]: val});\n        }\n    }\n\n    hideAlert() {\n        this.setState({alertState: false})\n    };\n\n    showAlert(msg) {\n        this.setState({alertMsg: msg, alertState: true})\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        for (const i of this.state[\"member_emails\"]) {\n            if (!validator.isEmail(i.trim())) {\n                this.showAlert(\n                    \"Please Check Member Emails For Error (Invalid Email-Id,Empty Rows etc)\"\n                );\n                return;\n            }\n        }\n        for (const i of this.state[\"member_names\"]) {\n            if (i === \"\") {\n                this.showAlert(\"Please Check Member Names For Error (Empty Rows etc)\");\n                return;\n            }\n        }\n        if (\n            this.state.member_emails.length === 0 ||\n            this.state.member_names.length === 0\n        ) {\n            this.showAlert(\"Please Fill All Fields\");\n            return;\n        }\n        if (this.state.member_emails.length !== this.state.member_names.length) {\n            this.showAlert(\"Different Number Of Names And Email\");\n            return;\n        }\n\n        if (this.state.member_emails.length < this.state.grp_size) {\n            this.showAlert(\"Number of members cannot be less than group size.\")\n            return;\n        }\n\n        if (this.state.deadline < Date.now() / 1000) {\n            this.showAlert(\"Please Enter Valid Deadline\");\n            return;\n        }\n\n        this.setState({isLoading: true});\n        let payload = {...this.state};\n        delete payload[\"isError\"];\n        delete payload[\"isLoading\"];\n        delete payload[\"alertState\"];\n        delete payload[\"alertMsg\"];\n        delete payload[\"member_emails\"];\n        delete payload[\"member_names\"];\n        payload[\"members\"] = Array()\n\n        for (let i = 0; i < this.state.member_emails.length; i++) {\n            payload[\"members\"].push({\n                \"name\": this.state.member_names[i],\n                \"email\": this.state.member_emails[i]\n            })\n        }\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(payload),\n        };\n        fetch(api_url + \"/create\", requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({isLoading: false});\n                if (data[\"status\"] === 0) {\n                    this.setState({isError: true});\n                    return;\n                }\n                this.props.history.push(\"/Done\");\n            })\n            .catch(function (err) {\n                this.setState({isLoading: false, isError: true});\n                console.info(err + \"------err------\");\n            }.bind(this));\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div style={{justifyContent: \"center\", display: \"flex\"}}>\n                    <CircularProgress style={{margin: \"20px\"}}/>\n                </div>\n            );\n        } else if (this.state.isError) {\n            return (\n                <div>\n                    <Alert\n                        severity=\"error\"\n                        style={{display: \"flex\", justifyContent: \"center\"}}\n                    >\n                        Error! Something Happened. Please Try Again.\n                    </Alert>\n                </div>\n            );\n        }\n\n\n        return (\n            <Grid container\n                  alignItems='center'\n                  justify='center'\n                  style={{minHeight: \"100vh\"}}\n                  id=\"main\"\n            >\n                <Dialog\n                    open={this.state.alertState}\n                >\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.state.alertMsg}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.hideAlert} color=\"primary\">\n                            Ok\n                        </Button>\n\n                    </DialogActions>\n                </Dialog>\n                <Paper\n                    elevation={3}\n                    style={{\n                        borderRadius: \"10px\",\n                        margin: \"10px\",\n                        padding: \"10px\",\n                        paddingTop: \"30px\",\n                    }}\n                >\n                    <span\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            padding:\"10px\"\n                        }}\n                    >\n                            <b>Whats this app about?</b><br/>\n                            <ul>\n                                <li>\n                                    It automates group formation for\n                                    projects/presentations/assignments etc, based on individual preferences.\n                                </li>\n                            </ul>\n                            <p>\n                                <b>But why not just ask other participants instead?</b>\n                                <br/>\n                                <ul>\n                                    <li>\n                                        Asking dozens of people to see if they are\n                                        available is really annoying.\n                                    </li>\n                                    <li>\n                                        You might feel that you would have been better off with some other choice.\n                                    </li>\n                                    <li>\n                                        A situation might arise where everyone is grouped but some groups are left with\n                                        vacancies.\n                                    </li>\n                                    <li>\n                                        By letting an app do the matching, you also avoid all those\n                                        awkward moments where you have to reject someone or get\n                                        rejected.\n                                    </li>\n                                </ul>\n                            </p>\n\n\n                            <b>How to use?</b>\n                            <br/>\n                            <ul>\n                                <li>You fill out this form.</li>\n                                <li>\n                                    The app will mail a form to every participants, asking them\n                                    to assign a preference (on a scale of 1 to 10) to all the other participants they\n                                    would like to be grouped with.\n                                </li>\n                                <li>\n                                    Once everyone has filled their choices (or the deadline is reached),\n                                    the app will form optimal groups and send emails to all the participants,\n                                    informing them of their respective groups.</li>\n                                <li>\n                                    Additionally it will also send you a mail containing all group allocations.\n                                </li>\n                            </ul>\n                            <br/>\n\n                            <b>How does it work?</b>\n                            <ul>\n                                <li>\n                                    See&nbsp;\n                                    <a href=\"https://github.com/AnjayGoel/Stable-Roommate-Generalised\">\n                                        this\n                                    </a>. Suggestions, PRs are welcomed.\n                                </li>\n                            </ul>\n                                      </span>\n                </Paper>\n                <br/>\n                <Paper\n                    elevation={3}\n                    style={{\n                        borderRadius: \"10px\",\n                        margin: \"10px\",\n                        padding: \"10px\",\n                    }}\n                >\n                    <form id=\"mainForm\" onSubmit={this.handleSubmit}><Grid\n                        container\n                        spacing={0}\n                        direction=\"column\"\n                        style={{\n                            padding: \"30px\",\n                        }}\n                    >\n                        <TextField\n                            name=\"organizer_name\"\n                            type=\"text\"\n                            label=\"Organizer's Name\"\n                            required={true}\n                            data-parse=\"uppercase\"\n                            onChange={this.handleChange}\n                        />\n                        <p/>\n                        <TextField\n                            name=\"organizer_email\"\n                            type=\"email\"\n                            label=\"Organizer's Email\"\n                            required={true}\n                            onChange={this.handleChange}\n                        />\n                        <p/>\n                        <TextField\n                            name=\"project_title\"\n                            type=\"text\"\n                            label=\"Title of Project\"\n                            required={true}\n                            onChange={this.handleChange}\n                        />\n                        <p/>\n                        <TextField\n                            name=\"grp_size\"\n                            type=\"number\"\n                            label=\"Group Size\"\n                            InputProps={{inputProps: {min: 2}}}\n                            required={true}\n                            onChange={this.handleChange}\n                        />\n                        <p/>\n                        <TextField\n                            name=\"deadline\"\n                            type=\"date\"\n                            label=\"Group formation deadline\"\n                            required={true}\n                            InputLabelProps={{shrink: true}}\n                            onChange={this.handleChange}\n                        />\n                        <p/>\n                        <div style={{display: \"flex\"}}>\n                            <span style={{margin: \"20px\", marginLeft: \"0px\"}}>\n                                <TextField\n                                    multiline={true}\n                                    required={true}\n                                    rows={5}\n                                    rowsMax={10}\n                                    onChange={this.handleChange}\n                                    label=\"Participant Names\"\n                                    variant=\"outlined\"\n                                    name=\"member_names\"\n                                    helperText=\"Seperated by a new line\"\n                                />\n                            </span>\n                            <span style={{margin: \"20px\",marginRight:\"0px\"}}>\n                                <TextField\n                                    multiline={true}\n                                    required={true}\n                                    rows={5}\n                                    rowsMax={10}\n                                    onChange={this.handleChange}\n                                    label=\"Participant Emails\"\n                                    variant=\"outlined\"\n                                    name=\"member_emails\"\n                                    helperText=\"Ensure same order as names\"\n                                />\n                            </span>\n                            <p/>\n                        </div>\n                        <Button type=\"Submit\" variant=\"contained\" color=\"primary\">\n                            Create\n                        </Button>\n                    </Grid>\n                    </form>\n                </Paper>\n            </Grid>\n        );\n    }\n}\n\nexport default InitForm;\n","import React from 'react';\n\nclass About extends React.Component {\n   render() {\n      return (\n         <div>\n            <h1>About...</h1>\n         </div>\n      )\n   }\n}\nexport default About;\n\n","import React from 'react';\n\nclass Done extends React.Component {\n   render() {\n      return (\n          <div style={{textAlign:\"center\", margin:\"30px\"}}>\n            <h3>Thank You!</h3>\n            <p>We will mail you the results when the process is complete.</p>\n         </div>\n      )\n   }\n}\nexport default Done;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {Autocomplete, Alert} from \"@material-ui/lab\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n    Paper,\n    List,\n    ListItem,\n    Box,\n    Typography,\n    IconButton,\n    Button,\n    TextField,\n} from \"@material-ui/core\";\nimport {api_url} from \"./config\";\n\nclass FillPreference extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleTag = this.handleTag.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.delete = this.delete.bind(this);\n\n        this.getNames = this.getNames.bind(this);\n        this.getNames();\n\n        this.state = {\n            name: \"Loading...\",\n            project_title: \"Loading...\",\n            organizer_name: \"Loading....\",\n            all: [],\n            chosen: [],\n            chosenPref: [],\n            isLoading: true,\n            isError: false,\n            errorMsg: \"\"\n        };\n    }\n\n    async getNames() {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(this.state),\n        };\n        fetch(\n            api_url + \"/vote/\" +\n            this.props.match.params.id +\n            \"/\" +\n            this.props.match.params.secret,\n            requestOptions\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({isLoading: false});\n                if (data[\"status\"] === 0) {\n                    this.setState({isError: true});\n                    this.setState({errorMsg:data[\"message\"]});\n                    return;\n                }\n                this.setState({\n                    name: data[\"name\"],\n                    project_title: data[\"project_title\"],\n                    organizer_name: data[\"organizer_name\"],\n                    all: data[\"names\"].filter((item) => item !== data[\"name\"]),\n                    chosen: [],\n                });\n            })\n            .catch(function (err) {\n                this.setState({isLoading: false, isError: true});\n            }.bind(this));\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const chosenPref = this.state.chosenPref;\n        var data = this.state.chosen.map(function (e, i) {\n            return {\"name\": e, \"score\": chosenPref[i]};\n        });\n        this.setState({isLoading: true});\n        var payload = {data: data};\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(payload),\n        };\n\n        fetch(\n            api_url + \"/vote/\" +\n            this.props.match.params.id +\n            \"/\" +\n            this.props.match.params.secret,\n            requestOptions\n        )\n            .then((response) => response.json())\n            .then((data) => {\n                if (data[\"status\"] === 0) {\n                    this.setState({isError: true});\n                    return;\n                } else {\n                    this.props.history.push(\"/Done\");\n                }\n            })\n            .catch(function (err) {\n                this.setState({isError: true});\n                console.info(err + \"------err------\");\n            }.bind(this));\n    }\n\n    delete(i) {\n        const newChosen = this.state.chosen;\n        newChosen.splice(i, 1);\n        this.setState({chosen: newChosen});\n    }\n\n    pref(i, val) {\n        const newChosenPref = this.state.chosenPref;\n        newChosenPref[i] = parseInt(val);\n        this.setState({chosenPref: newChosenPref});\n    }\n\n    handleTag(event, value) {\n        if (!this.state.all.includes(value)) {\n            return;\n        }\n        const newChosen = this.state.chosen;\n        if (!newChosen.includes(value)) {\n            newChosen.push(value);\n            this.setState({chosen: newChosen});\n        }\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div style={{justifyContent: \"center\", display: \"flex\"}}>\n                    <CircularProgress style={{margin: \"20px\"}}/>\n                </div>\n            );\n        } else if (this.state.isError) {\n            return (\n                <div>\n                    <Alert\n                        severity=\"error\"\n                        style={{display: \"flex\", justifyContent: \"center\"}}\n                    >\n                        Error! {this.state.errorMsg}.\n                    </Alert>\n                </div>\n            );\n        }\n        const items = [];\n\n        for (const i in this.state.chosen) {\n            items.push(\n                <Item\n                    key={i.toString()}\n                    name={this.state.chosen[i]}\n                    onClick={() => this.delete(i)}\n                    onPref={(event) => this.pref(i, event.target.value)}\n                />\n            );\n        }\n        return (\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}>\n\n            <Box id=\"main\" style={{justifyContent: \"center\",display: \"inline-block\"}}>\n                <Paper\n                    elevation={3}\n                    style={{\n                        borderRadius: \"10px\",\n                        margin: \"10px\",\n                        padding: \"10px\",\n                        paddingTop: \"30px\",\n                    }}\n                >\n                    <form onSubmit={this.handleSubmit}>\n                        <p>\n                            Hello {this.state.name},<br/>\n                            Please fill out your preferences for {this.state.project_title}{\" \"}\n                        </p>\n                        <span\n                            style={{\n                                marginLeft:-100,\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n              <Typography style={{margin: 10}}>Find Name:</Typography>\n              <Autocomplete\n                  onInputChange={this.handleTag}\n                  options={this.state.all}\n                  getOptionLabel={(option) => option}\n                  style={{width: 300}}\n                  onChange={this.onTagsChange}\n                  renderInput={(params) => (\n                      <TextField {...params} variant=\"outlined\"/>\n                  )}\n              />{\" \"}\n            </span>\n                        <Paper elevation={0} style={{maxHeight: 400, overflow: \"unset\"}}>\n                            <List style={{justifyContent: \"center\", alignItems: \"center\"}}>\n                                {items}\n                            </List>\n                        </Paper>\n                        <span\n                            style={{\n                                margin: \"20px\",\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n              <Button\n                  type=\"submit\"\n                  style={{margin: \"20px\", alignSelf: \"center\"}}\n                  variant=\"contained\"\n                  color=\"primary\"\n              >\n                Submit\n              </Button>\n            </span>\n                        <div>\n                            Note:\n                            <ul>\n                                <li>\n                                    You can leave out choices, it that case they will be assigned a\n                                    preference of zero.\n                                </li>\n                                <li>\n                                    Filling out as many choices as you can will lead to a better\n                                    matching.\n                                </li>\n                            </ul>\n                        </div>\n                    </form>\n                </Paper>\n            </Box>\n            </div>\n        );\n    }\n}\n\nclass Item extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <ListItem style={{justifyContent: \"center\", alignItems: \"center\"}}>\n                <Paper>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <Typography align=\"center\" style={{margin: \"20px\"}}>\n                            {this.props.name}\n                        </Typography>\n                        <TextField\n                            style={{minWidth: \"170px\",marginBottom:\"20px\"}}\n                            required={true}\n                            onChange={this.props.onPref}\n                            InputProps={{inputProps: {max: 10, min: 0}}}\n                            type=\"number\"\n                            label=\"Preference (0-10)\"\n                        />\n                        <IconButton aria-label=\"delete\" onClick={this.props.onClick}>\n                            <DeleteIcon fontSize=\"large\"/>\n                        </IconButton>\n                    </div>\n                </Paper>\n            </ListItem>\n        );\n    }\n}\n\nexport default FillPreference;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport InitForm from \"./initForm\";\nimport About from \"./about\";\nimport Done from \"./done\";\nimport {Box, AppBar, Toolbar, Typography, Link, MuiThemeProvider, Button, IconButton} from \"@material-ui/core\";\nimport {HashRouter, Route, Switch, Redirect} from \"react-router-dom\";\nimport FillPreference from \"./fillPreference\";\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport React from \"react\";\n\nconst my_theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#757ce8',\n            main: '#3f50b5',\n            dark: '#002884',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ff7961',\n            main: '#f44336',\n            dark: '#ba000d',\n            contrastText: '#000',\n        },\n    },\n});\n\nconst my_theme_d = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#000000',\n            main: '#000000',\n            dark: '#000000',\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: '#ff7961',\n            main: '#f44336',\n            dark: '#ba000d',\n            contrastText: '#000',\n        },\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <MuiThemeProvider theme={my_theme}>\n            <Box>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography style={{fontSize: \"large\"}}>\n                            <Link href=\"/GroupUs\" color=\"inherit\" style={{textDecoration: 'none'}}>\n                                Group Us\n                            </Link>\n                        </Typography>\n                        <div style={{marginLeft: 'auto'}}>\n                            <IconButton aria-label=\"Github\" style={{color: \"white\", justifySelf: \"right\"}}\n                                        onClick={() => window.open('https://github.com/anjaygoel')}>\n                                <GitHubIcon style={{color: \"white\", justifySelf: \"right\"}}/>\n                            </IconButton>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <HashRouter>\n                    <App/>\n                </HashRouter>\n            </Box>\n        </MuiThemeProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nfunction App() {\n    return (\n        <main>\n            <Switch>\n                <Route path=\"/\" component={InitForm} exact/>\n                <Route path=\"/home\" component={InitForm} exact/>\n                <Route path=\"/about\" component={About}/>\n                <Route path=\"/done\" component={Done}/>\n                <Route path=\"/fillPreference/:id/:secret\" component={FillPreference}/>\n                <Route render={() => <Redirect to={{pathname: \"/\"}}/>}/>\n            </Switch>\n        </main>\n    );\n}\n"],"sourceRoot":""}